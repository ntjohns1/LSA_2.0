server:
  port: 8080
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.web.HttpLogging: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.cloud.gateway: DEBUG
spring:
  config:
    discovery:
      enabled: true
      service-id: config-server
  application:
    name: gateway-service
  cloud:
    gateway:
      redis:
        enabled: false
      routes:
        - id: events
          uri: http://localhost:5001
          predicates:
            - Path=/api/lesson/**
          filters:
            - TokenRelay=
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: gateway
            client-secret: VQWKhpitj8jheogYhbRgavKg6qNkOcZV
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8083/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/auth
            token-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/token
            user-info-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/certs
#server:
#  port: 8080
#keycloak-client:
#  server-url: http://localhost:8083/auth
#  realm: lsa
#spring:
#  application:
#    name: gateway-service
#  security:
#    oauth2:
#      client:
#        registration:
#          gateway:
#            provider: keycloak
#            client-id: test-event
#            client-secret: yjt61YpKNVxcfpaFE6VrrxpA7Y58Sqq8
#            authorization-grant-type: password_credentials
#            redirect-uri: "http://localhost:8083/auth/realms/lsa/protocol/openid-connect/auth"
#            scope: openid,profile,email,roles
#        provider:
#          keycloak:
#            authorization-uri: http://localhost:8083/auth/realms/lsa/protocol/openid-connect/auth
#            token-uri: http://localhost:8083/auth/realms/lsa/protocol/openid-connect/token
#            user-info-uri: http://localhost:8083/auth/realms/lsa/protocol/openid-connect/userinfo
#            user-name-attribute: sub
#            jwk-set-uri: http://localhost:8083/auth/realms/lsa/protocol/openid-connect/certs
#  cloud:
#    gateway:
#      default-filters:
#        - TokenRelay
#      globalcors:
#        cors-configurations:
#          '[/**]':
#            allowedOrigins: "http://localhost:3000"
#            allowedHeaders:
#              - content-type
#            allowedMethods:
#              - GET
#              - POST
#      routes:
#        - id: events
#          uri: http://localhost:5001
#          predicates:
#            - Path=/api/lesson/**
#          filters:
#            - RemoveRequestHeader=Cookie
#logging:
#  level:
#    org.springframework.cloud.gateway: DEBUG
#    reactor.netty: DEBUG
#server:
#  port: 8080
#spring:
#  application:
#    name: gateway-service
#  cloud:
#    gateway:
#      routes:
#        - id: events
#          uri: http://localhost:5001
#          predicates:
#            - Path=/api/lesson/**
#          filters:
#            - TokenRelay=
#            - RemoveRequestHeader=Cookie
#  security:
#    oauth2:
#      client:
#        registration:
#          keycloak:
#            provider: keycloak
#            client-id: gateway
#            client-secret: VQWKhpitj8jheogYhbRgavKg6qNkOcZV
#            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:8083/login/oauth2/code/keycloak
#            scope: openid
#        provider:
#          keycloak:
#            authorization-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/auth
#            token-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/token
#            user-info-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/userinfo
#            jwk-set-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/certs
#            user-name-attribute: name
#            user-info-authentication-method: header
#      resourceserver:
#        jwt:
#          jwk-set-uri: http://localhost:8083/realms/lsa/protocol/openid-connect/certs
##eureka:
##  client:
##    serviceUrl:
##      defaultZone: http://service